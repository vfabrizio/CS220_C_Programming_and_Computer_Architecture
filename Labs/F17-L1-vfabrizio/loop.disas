
loop:     file format elf64-x86-64


Disassembly of section .init:

0000000000000568 <_init>:
 568:	48 83 ec 08          	sub    $0x8,%rsp
 56c:	48 8b 05 6d 0a 20 00 	mov    0x200a6d(%rip),%rax        # 200fe0 <__gmon_start__>
 573:	48 85 c0             	test   %rax,%rax
 576:	74 02                	je     57a <_init+0x12>
 578:	ff d0                	callq  *%rax
 57a:	48 83 c4 08          	add    $0x8,%rsp
 57e:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 82 0a 20 00    	pushq  0x200a82(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 84 0a 20 00    	jmpq   *0x200a84(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <clock@plt>:
 590:	ff 25 82 0a 20 00    	jmpq   *0x200a82(%rip)        # 201018 <clock@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <printf@plt>:
 5a0:	ff 25 7a 0a 20 00    	jmpq   *0x200a7a(%rip)        # 201020 <printf@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005b0 <.plt.got>:
 5b0:	ff 25 42 0a 20 00    	jmpq   *0x200a42(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005c0 <_start>:
 5c0:	31 ed                	xor    %ebp,%ebp
 5c2:	49 89 d1             	mov    %rdx,%r9
 5c5:	5e                   	pop    %rsi
 5c6:	48 89 e2             	mov    %rsp,%rdx
 5c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5cd:	50                   	push   %rax
 5ce:	54                   	push   %rsp
 5cf:	4c 8d 05 3a 02 00 00 	lea    0x23a(%rip),%r8        # 810 <__libc_csu_fini>
 5d6:	48 8d 0d c3 01 00 00 	lea    0x1c3(%rip),%rcx        # 7a0 <__libc_csu_init>
 5dd:	48 8d 3d 55 01 00 00 	lea    0x155(%rip),%rdi        # 739 <main>
 5e4:	ff 15 ee 09 20 00    	callq  *0x2009ee(%rip)        # 200fd8 <__libc_start_main@GLIBC_2.2.5>
 5ea:	f4                   	hlt    
 5eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005f0 <deregister_tm_clones>:
 5f0:	48 8d 3d 41 0a 20 00 	lea    0x200a41(%rip),%rdi        # 201038 <__TMC_END__>
 5f7:	48 8d 05 41 0a 20 00 	lea    0x200a41(%rip),%rax        # 20103f <__TMC_END__+0x7>
 5fe:	55                   	push   %rbp
 5ff:	48 29 f8             	sub    %rdi,%rax
 602:	48 89 e5             	mov    %rsp,%rbp
 605:	48 83 f8 0e          	cmp    $0xe,%rax
 609:	76 15                	jbe    620 <deregister_tm_clones+0x30>
 60b:	48 8b 05 be 09 20 00 	mov    0x2009be(%rip),%rax        # 200fd0 <_ITM_deregisterTMCloneTable>
 612:	48 85 c0             	test   %rax,%rax
 615:	74 09                	je     620 <deregister_tm_clones+0x30>
 617:	5d                   	pop    %rbp
 618:	ff e0                	jmpq   *%rax
 61a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 620:	5d                   	pop    %rbp
 621:	c3                   	retq   
 622:	0f 1f 40 00          	nopl   0x0(%rax)
 626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 62d:	00 00 00 

0000000000000630 <register_tm_clones>:
 630:	48 8d 3d 01 0a 20 00 	lea    0x200a01(%rip),%rdi        # 201038 <__TMC_END__>
 637:	48 8d 35 fa 09 20 00 	lea    0x2009fa(%rip),%rsi        # 201038 <__TMC_END__>
 63e:	55                   	push   %rbp
 63f:	48 29 fe             	sub    %rdi,%rsi
 642:	48 89 e5             	mov    %rsp,%rbp
 645:	48 c1 fe 03          	sar    $0x3,%rsi
 649:	48 89 f0             	mov    %rsi,%rax
 64c:	48 c1 e8 3f          	shr    $0x3f,%rax
 650:	48 01 c6             	add    %rax,%rsi
 653:	48 d1 fe             	sar    %rsi
 656:	74 18                	je     670 <register_tm_clones+0x40>
 658:	48 8b 05 91 09 20 00 	mov    0x200991(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 65f:	48 85 c0             	test   %rax,%rax
 662:	74 0c                	je     670 <register_tm_clones+0x40>
 664:	5d                   	pop    %rbp
 665:	ff e0                	jmpq   *%rax
 667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 66e:	00 00 
 670:	5d                   	pop    %rbp
 671:	c3                   	retq   
 672:	0f 1f 40 00          	nopl   0x0(%rax)
 676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 67d:	00 00 00 

0000000000000680 <__do_global_dtors_aux>:
 680:	80 3d b1 09 20 00 00 	cmpb   $0x0,0x2009b1(%rip)        # 201038 <__TMC_END__>
 687:	75 27                	jne    6b0 <__do_global_dtors_aux+0x30>
 689:	48 83 3d 67 09 20 00 	cmpq   $0x0,0x200967(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 690:	00 
 691:	55                   	push   %rbp
 692:	48 89 e5             	mov    %rsp,%rbp
 695:	74 0c                	je     6a3 <__do_global_dtors_aux+0x23>
 697:	48 8b 3d 92 09 20 00 	mov    0x200992(%rip),%rdi        # 201030 <__dso_handle>
 69e:	e8 0d ff ff ff       	callq  5b0 <.plt.got>
 6a3:	e8 48 ff ff ff       	callq  5f0 <deregister_tm_clones>
 6a8:	5d                   	pop    %rbp
 6a9:	c6 05 88 09 20 00 01 	movb   $0x1,0x200988(%rip)        # 201038 <__TMC_END__>
 6b0:	f3 c3                	repz retq 
 6b2:	0f 1f 40 00          	nopl   0x0(%rax)
 6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6bd:	00 00 00 

00000000000006c0 <frame_dummy>:
 6c0:	48 8d 3d 21 07 20 00 	lea    0x200721(%rip),%rdi        # 200de8 <__JCR_END__>
 6c7:	48 83 3f 00          	cmpq   $0x0,(%rdi)
 6cb:	75 0b                	jne    6d8 <frame_dummy+0x18>
 6cd:	e9 5e ff ff ff       	jmpq   630 <register_tm_clones>
 6d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 6d8:	48 8b 05 09 09 20 00 	mov    0x200909(%rip),%rax        # 200fe8 <_Jv_RegisterClasses>
 6df:	48 85 c0             	test   %rax,%rax
 6e2:	74 e9                	je     6cd <frame_dummy+0xd>
 6e4:	55                   	push   %rbp
 6e5:	48 89 e5             	mov    %rsp,%rbp
 6e8:	ff d0                	callq  *%rax
 6ea:	5d                   	pop    %rbp
 6eb:	e9 40 ff ff ff       	jmpq   630 <register_tm_clones>

00000000000006f0 <forLoop>:
 6f0:	55                   	push   %rbp
 6f1:	48 89 e5             	mov    %rsp,%rbp
 6f4:	89 7d ec             	mov    %edi,-0x14(%rbp)
 6f7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 6fe:	eb 04                	jmp    704 <forLoop+0x14>
 700:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 704:	8b 45 fc             	mov    -0x4(%rbp),%eax
 707:	3b 45 ec             	cmp    -0x14(%rbp),%eax
 70a:	72 f4                	jb     700 <forLoop+0x10>
 70c:	90                   	nop
 70d:	5d                   	pop    %rbp
 70e:	c3                   	retq   

000000000000070f <whileLoop>:
 70f:	55                   	push   %rbp
 710:	48 89 e5             	mov    %rsp,%rbp
 713:	89 7d fc             	mov    %edi,-0x4(%rbp)
 716:	eb 04                	jmp    71c <whileLoop+0xd>
 718:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
 71c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
 720:	75 f6                	jne    718 <whileLoop+0x9>
 722:	90                   	nop
 723:	5d                   	pop    %rbp
 724:	c3                   	retq   

0000000000000725 <doWhileLoop>:
 725:	55                   	push   %rbp
 726:	48 89 e5             	mov    %rsp,%rbp
 729:	89 7d fc             	mov    %edi,-0x4(%rbp)
 72c:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
 730:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
 734:	75 f6                	jne    72c <doWhileLoop+0x7>
 736:	90                   	nop
 737:	5d                   	pop    %rbp
 738:	c3                   	retq   

0000000000000739 <main>:
 739:	55                   	push   %rbp
 73a:	48 89 e5             	mov    %rsp,%rbp
 73d:	48 83 ec 20          	sub    $0x20,%rsp
 741:	c7 45 fc 00 ca 9a 3b 	movl   $0x3b9aca00,-0x4(%rbp)
 748:	e8 43 fe ff ff       	callq  590 <clock@plt>
 74d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 751:	8b 45 fc             	mov    -0x4(%rbp),%eax
 754:	89 c7                	mov    %eax,%edi
 756:	e8 ca ff ff ff       	callq  725 <doWhileLoop>
 75b:	e8 30 fe ff ff       	callq  590 <clock@plt>
 760:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 768:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
 76c:	66 0f ef c0          	pxor   %xmm0,%xmm0
 770:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
 775:	f2 0f 10 0d c3 00 00 	movsd  0xc3(%rip),%xmm1        # 840 <_IO_stdin_used+0x20>
 77c:	00 
 77d:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 781:	48 8d 3d a0 00 00 00 	lea    0xa0(%rip),%rdi        # 828 <_IO_stdin_used+0x8>
 788:	b8 01 00 00 00       	mov    $0x1,%eax
 78d:	e8 0e fe ff ff       	callq  5a0 <printf@plt>
 792:	b8 00 00 00 00       	mov    $0x0,%eax
 797:	c9                   	leaveq 
 798:	c3                   	retq   
 799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000007a0 <__libc_csu_init>:
 7a0:	41 57                	push   %r15
 7a2:	41 56                	push   %r14
 7a4:	41 89 ff             	mov    %edi,%r15d
 7a7:	41 55                	push   %r13
 7a9:	41 54                	push   %r12
 7ab:	4c 8d 25 26 06 20 00 	lea    0x200626(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>
 7b2:	55                   	push   %rbp
 7b3:	48 8d 2d 26 06 20 00 	lea    0x200626(%rip),%rbp        # 200de0 <__init_array_end>
 7ba:	53                   	push   %rbx
 7bb:	49 89 f6             	mov    %rsi,%r14
 7be:	49 89 d5             	mov    %rdx,%r13
 7c1:	4c 29 e5             	sub    %r12,%rbp
 7c4:	48 83 ec 08          	sub    $0x8,%rsp
 7c8:	48 c1 fd 03          	sar    $0x3,%rbp
 7cc:	e8 97 fd ff ff       	callq  568 <_init>
 7d1:	48 85 ed             	test   %rbp,%rbp
 7d4:	74 20                	je     7f6 <__libc_csu_init+0x56>
 7d6:	31 db                	xor    %ebx,%ebx
 7d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 7df:	00 
 7e0:	4c 89 ea             	mov    %r13,%rdx
 7e3:	4c 89 f6             	mov    %r14,%rsi
 7e6:	44 89 ff             	mov    %r15d,%edi
 7e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 7ed:	48 83 c3 01          	add    $0x1,%rbx
 7f1:	48 39 dd             	cmp    %rbx,%rbp
 7f4:	75 ea                	jne    7e0 <__libc_csu_init+0x40>
 7f6:	48 83 c4 08          	add    $0x8,%rsp
 7fa:	5b                   	pop    %rbx
 7fb:	5d                   	pop    %rbp
 7fc:	41 5c                	pop    %r12
 7fe:	41 5d                	pop    %r13
 800:	41 5e                	pop    %r14
 802:	41 5f                	pop    %r15
 804:	c3                   	retq   
 805:	90                   	nop
 806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 80d:	00 00 00 

0000000000000810 <__libc_csu_fini>:
 810:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000814 <_fini>:
 814:	48 83 ec 08          	sub    $0x8,%rsp
 818:	48 83 c4 08          	add    $0x8,%rsp
 81c:	c3                   	retq   
